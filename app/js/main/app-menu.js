// Generated by CoffeeScript 1.11.1
(function() {
  var AppMenu, Dialog, Menu, app, electron,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  electron = require('electron');

  app = electron.app;

  Menu = electron.Menu;

  Dialog = electron.dialog;

  AppMenu = (function() {
    function AppMenu(ctx) {
      this.ctx = ctx;
      this.onClick = bind(this.onClick, this);
      this.init();
    }

    AppMenu.prototype.init = function() {
      return Menu.setApplicationMenu(Menu.buildFromTemplate([
        {
          id: 'eddy',
          label: 'eddy',
          submenu: [
            {
              label: 'About eddy',
              id: 'about',
              accelerator: 'Cmd+.',
              click: this.onClick
            }, {
              type: 'separator'
            }, {
              label: 'Hide eddy',
              id: 'hide',
              accelerator: 'Cmd+h',
              role: 'hide'
            }, {
              label: 'Hide Others',
              id: 'hide-others',
              accelerator: 'Alt+Cmd+h',
              role: 'hideothers'
            }, {
              type: 'separator'
            }, {
              label: 'Toggle Dev-Tools',
              id: 'toggle-dev-tools',
              accelerator: 'Alt+Cmd+i',
              click: this.onClick
            }, {
              label: 'Reload',
              id: 'reload',
              accelerator: 'Cmd+r',
              click: this.onClick
            }, {
              type: 'separator'
            }, {
              label: 'Quit',
              id: 'quit',
              accelerator: 'Cmd+q',
              click: this.onClick
            }
          ]
        }, {
          id: 'file',
          label: 'File',
          submenu: [
            {
              label: 'Open File',
              id: 'open-file',
              accelerator: 'Cmd+o',
              click: this.onClick
            }, {
              type: 'separator'
            }
          ]
        }
      ]));
    };

    AppMenu.prototype.showAddFolderDialog = function() {
      var opts;
      opts = {
        title: 'add folder',
        defaultPath: this.ctx.store.get('lastFolderPath'),
        properties: ['openDirectory', 'showHiddenFiles']
      };
      Dialog.showOpenDialog(opts, (function(_this) {
        return function(filePaths) {
          var path;
          if (filePaths) {
            path = filePaths[0];
            _this.ctx.folders.addFolder(path);
            return _this.ctx.store.set('lastFolderPath', path);
          }
        };
      })(this));
      return null;
    };

    AppMenu.prototype.onClick = function(item, win) {
      console.log('menu item clicked: ', item.id);
      switch (item.id) {
        case 'reload':
          return win.webContents.reloadIgnoringCache();
        case 'toggle-dev-tools':
          return win.webContents.toggleDevTools();
        case 'quit':
          return app.quit();
        case 'add-folder':
          return this.showAddFolderDialog();
        case 'open-file':
          return console.log('open file');
      }
    };

    return AppMenu;

  })();

  module.exports = AppMenu;

}).call(this);

//# sourceMappingURL=app-menu.js.map
