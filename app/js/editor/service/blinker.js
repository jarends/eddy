// Generated by CoffeeScript 1.11.1
(function() {
  var Blinker, Emitter,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Emitter = require('events');

  Blinker = (function(superClass) {
    extend(Blinker, superClass);

    Blinker.BLINK = 'blink';

    Blinker.VISIBLE = 'visible';

    Blinker.INVISIBLE = 'invisible';

    function Blinker(editor) {
      this.editor = editor;
      this.tick = bind(this.tick, this);
      Blinker.__super__.constructor.call(this);
      this.visible = true;
      this.start();
    }

    Blinker.prototype.start = function() {
      if (this.running) {
        return this;
      }
      this.running = true;
      this.visible = true;
      this.frames = -30;
      this.rafTimeout = window.requestAnimationFrame(this.tick);
      this.blink();
      return this;
    };

    Blinker.prototype.stop = function() {
      if (!this.running) {
        return;
      }
      this.running = false;
      this.visible = true;
      this.frames = 0;
      window.cancelAnimationFrame(this.rafTimeout);
      this.blink();
      return this;
    };

    Blinker.prototype.show = function() {
      this.visible = true;
      this.frames = -30;
      this.blink();
      return this;
    };

    Blinker.prototype.hide = function() {
      this.visible = false;
      this.frames = 0;
      this.blink();
      return this;
    };

    Blinker.prototype.toggle = function() {
      if (this.visible) {
        this.hide();
      } else {
        this.show();
      }
      this.frames = 0;
      return this;
    };

    Blinker.prototype.blink = function() {
      if (this.visible) {
        this.emit(Blinker.VISIBLE);
      } else {
        this.emit(Blinker.INVISIBLE);
      }
      this.emit(Blinker.BLINK, this.visible);
      return this;
    };

    Blinker.prototype.tick = function() {
      this.rafTimeout = window.requestAnimationFrame(this.tick);
      if (++this.frames === 30) {
        this.toggle();
      }
      return this;
    };

    return Blinker;

  })(Emitter);

  module.exports = Blinker;

}).call(this);

//# sourceMappingURL=blinker.js.map
