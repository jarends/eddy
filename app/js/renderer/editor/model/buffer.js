// Generated by CoffeeScript 1.12.5
(function() {
  var Buffer, List, Map, events, immutable;

  immutable = require('immutable');

  events = require('../events');

  Map = immutable.Map;

  List = immutable.List;

  Buffer = (function() {
    function Buffer(editor) {
      this.editor = editor;
      console.log('Buffer.constructor: ');
      this.state = this.editor.state;
    }

    Buffer.prototype.updateText = function(text) {
      var i, j, l, len, lines, max, t;
      text = (text || '').replace(/\t/g, '    ');
      text = text.split(/\r\n|\r|\n/);
      lines = [];
      max = 0;
      for (i = j = 0, len = text.length; j < len; i = ++j) {
        t = text[i];
        l = t.length;
        if (l > max) {
          max = l;
        }
        lines.push(Map({
          text: t.replace(/\s*$/, ''),
          index: i
        }));
      }
      this.state.set('lines', List(lines));
      this.state.set('maxCols', max);
      this.editor.emit(events.TEXT_UPDATED);
      this.editor.emit(events.CURSORS_CHANGED);
      return this;
    };

    Buffer.prototype.getSize = function() {
      return this.state.get('lines').size || 0;
    };

    Buffer.prototype.getMaxCols = function() {
      return this.state.get('maxCols');
    };

    Buffer.prototype.getLine = function(index) {
      if (index < 0 || index >= this.getSize()) {
        return null;
      }
      return this.state.getIn(['lines', index]).toJS();
    };

    Buffer.prototype.getLineLength = function(index) {
      var text;
      if (index < 0 || index >= this.getSize()) {
        return null;
      }
      return text = this.state.getIn(['lines', index, 'text']).length;
    };

    Buffer.prototype.insertTextAt = function(row, col, text) {
      return this;
    };

    Buffer.prototype.removeText = function(row0, col0, row1, col1) {
      return this;
    };

    Buffer.prototype.removeCharAt = function(row, col) {
      return this;
    };

    return Buffer;

  })();

  module.exports = Buffer;

}).call(this);

//# sourceMappingURL=buffer.js.map
