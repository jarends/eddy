// Generated by CoffeeScript 1.11.1
(function() {
  var AppView, DOM, EditorView, Toolbar,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  DOM = require('../core/tree-one');

  Toolbar = require('./toolbar');

  EditorView = require('./editor-view');

  AppView = (function(superClass) {
    extend(AppView, superClass);

    function AppView() {}

    AppView.prototype.onMount = function() {
      console.log('AppView.onMount: ', this.view);
      return null;
    };

    AppView.prototype.onWillUnmount = function() {
      return null;
    };

    AppView.prototype.render = function() {
      return {
        type: 'div',
        props: {
          className: 'window',
          children: [
            {
              type: Toolbar,
              props: {}
            }, {
              type: 'div',
              props: {
                className: 'content',
                children: [
                  {
                    type: EditorView,
                    props: {}
                  }
                ]
              }
            }
          ]
        }
      };
    };

    return AppView;

  })(DOM.Base);

  module.exports = AppView;

}).call(this);

//# sourceMappingURL=app-view.js.map
